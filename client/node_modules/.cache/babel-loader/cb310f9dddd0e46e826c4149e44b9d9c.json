{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geici\\\\OneDrive\\\\Desktop\\\\unc bootcamp\\\\projects\\\\shop-shop-\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useContext } from '.../../utils.GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu(_ref) {\n  _s();\n\n  let {\n    setCategory\n  } = _ref;\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    // if category data exists or has changed from response of usequery, then run dispatch\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to dispatch\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCategory(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"D7HbMyzL81MFXoERtyegb6ZLfog=\", true, function () {\n  return [useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","QUERY_CATEGORIES","useContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CategoryMenu","setCategory","state","dispatch","useStoreContext","categories","data","categoryData","type","map","item","_id","name"],"sources":["C:/Users/geici/OneDrive/Desktop/unc bootcamp/projects/shop-shop-/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect} from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useContext } from '.../../utils.GlobalState'\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY} from '../../utils/actions'\n\nfunction CategoryMenu({ setCategory }) {\n\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if category data exists or has changed from response of usequery, then run dispatch\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to dispatch\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            setCategory(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA0D,qBAA1D;;;AAEA,SAASC,YAAT,OAAuC;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAErC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,eAAe,EAAzC;EACA,MAAM;IAAEC;EAAF,IAAiBH,KAAvB;EACA,MAAM;IAAEI,IAAI,EAAEC;EAAR,IAAyBZ,QAAQ,CAACC,gBAAD,CAAvC;EAEAF,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,YAAJ,EAAkB;MAChB;MACAJ,QAAQ,CAAC;QACPK,IAAI,EAAEV,iBADC;QAEPO,UAAU,EAAEE,YAAY,CAACF;MAFlB,CAAD,CAAR;IAID;EACF,CATQ,EASN,CAACE,YAAD,EAAeJ,QAAf,CATM,CAAT;EAUA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGE,UAAU,CAACI,GAAX,CAAgBC,IAAD,iBACd;MAEE,OAAO,EAAE,MAAM;QACbT,WAAW,CAACS,IAAI,CAACC,GAAN,CAAX;MACD,CAJH;MAAA,UAMGD,IAAI,CAACE;IANR,GACOF,IAAI,CAACC,GADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA/BQX,Y;UAIwBL,Q;;;KAJxBK,Y;AAiCT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}